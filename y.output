Nonterminals useless in grammar

   gdec_stat
   gid_list
   gid


Rules useless in grammar

   60 gdec_list: gdec_stat gdec_list

   61 gdec_stat: type gid_list ';'

   62 gid_list: gid_list ',' gid

   63 gid: ID
   64    | ID '[' NUM ']'
   65    | ID '(' arg_list ')'


Grammar

    0 $accept: pgm $end

    1 pgm: gl_dec fn_def main_fn

    2 gl_dec: DECL gdec_list ENDDECL

    3 gdec_list: /* empty */

    4 type: INTEGER
    5     | BOOLEAN

    6 fn_def: type ID '(' arg_list ')' '{' l_dec body '}'

    7 main_fn: INTEGER MAIN '(' ')' '{' l_dec body '}'

    8 arg_list: arg ';' arg_list
    9         | /* empty */

   10 arg: arg_type id_list

   11 arg_type: INTEGER
   12         | BOOLEAN

   13 id_list: ID
   14        | '&' ID
   15        | ID ',' id_list
   16        | '&' ID ',' id_list

   17 l_dec: DECL ldec_list ENDDECL

   18 ldec_list: ldec_stat ldec_list
   19          | /* empty */

   20 ldec_stat: type var_list ';'

   21 var_list: ID
   22         | var_list ',' ID

   23 body: BGN slist END

   24 slist: slist stmt
   25      | stmt

   26 stmt: ID '=' expr ';'
   27     | ID '[' expr ']' '=' expr ';'
   28     | READ '(' ID ')' ';'
   29     | READ '(' ID '[' expr ']' ')' ';'
   30     | WRITE '(' expr ')' ';'
   31     | IF '(' expr ')' THEN slist ENDIF ';'
   32     | IF '(' expr ')' THEN slist ELSE slist ENDIF ';'
   33     | WHILE '(' expr ')' DO slist ENDWHILE ';'

   34 act_par: '&' ID
   35        | expr
   36        | '&' ID ',' act_par
   37        | expr ',' act_par

   38 expr: ID
   39     | ID '[' expr ']'
   40     | ID '(' act_par ')'
   41     | NUM
   42     | '-' NUM
   43     | TRUE
   44     | FALSE
   45     | expr '+' expr
   46     | expr '-' expr
   47     | expr '*' expr
   48     | expr '/' expr
   49     | expr '%' expr
   50     | '(' expr ')'
   51     | expr '>' expr
   52     | expr '<' expr
   53     | expr LE expr
   54     | expr GE expr
   55     | expr EQ expr
   56     | expr NE expr
   57     | expr AND expr
   58     | expr OR expr
   59     | NOT expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 49
'&' (38) 14 16 34 36
'(' (40) 6 7 28 29 30 31 32 33 40 50
')' (41) 6 7 28 29 30 31 32 33 40 50
'*' (42) 47
'+' (43) 45
',' (44) 15 16 22 36 37
'-' (45) 42 46
'/' (47) 48
';' (59) 8 20 26 27 28 29 30 31 32 33
'<' (60) 52
'=' (61) 26 27
'>' (62) 51
'[' (91) 27 29 39
']' (93) 27 29 39
'{' (123) 6 7
'}' (125) 6 7
error (256)
NUM (258) 41 42
ID (259) 6 13 14 15 16 21 22 26 27 28 29 34 36 38 39 40
UMINUS (260)
READ (261) 28 29
WRITE (262) 30
IF (263) 31 32
THEN (264) 31 32
ELSE (265) 32
ENDIF (266) 31 32
WHILE (267) 33
DO (268) 33
ENDWHILE (269) 33
DECL (270) 2 17
ENDDECL (271) 2 17
INTEGER (272) 4 7 11
BOOLEAN (273) 5 12
TRUE (274) 43
FALSE (275) 44
BGN (276) 23
END (277) 23
MAIN (278) 7
NE (279) 56
LE (280) 53
GE (281) 54
EQ (282) 55
OR (283) 58
AND (284) 57
NOT (285) 59


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
pgm (49)
    on left: 1, on right: 0
gl_dec (50)
    on left: 2, on right: 1
gdec_list (51)
    on left: 3, on right: 2
type (52)
    on left: 4 5, on right: 6 20
fn_def (53)
    on left: 6, on right: 1
main_fn (54)
    on left: 7, on right: 1
arg_list (55)
    on left: 8 9, on right: 6 8
arg (56)
    on left: 10, on right: 8
arg_type (57)
    on left: 11 12, on right: 10
id_list (58)
    on left: 13 14 15 16, on right: 10 15 16
l_dec (59)
    on left: 17, on right: 6 7
ldec_list (60)
    on left: 18 19, on right: 17 18
ldec_stat (61)
    on left: 20, on right: 18
var_list (62)
    on left: 21 22, on right: 20 22
body (63)
    on left: 23, on right: 6 7
slist (64)
    on left: 24 25, on right: 23 24 31 32 33
stmt (65)
    on left: 26 27 28 29 30 31 32 33, on right: 24 25
act_par (66)
    on left: 34 35 36 37, on right: 36 37 40
expr (67)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58 59, on right: 26 27 29 30 31 32 33 35 37 39 45 46 47 48
    49 50 51 52 53 54 55 56 57 58 59


state 0

    0 $accept: . pgm $end

    DECL  shift, and go to state 1

    pgm     go to state 2
    gl_dec  go to state 3


state 1

    2 gl_dec: DECL . gdec_list ENDDECL

    $default  reduce using rule 3 (gdec_list)

    gdec_list  go to state 4


state 2

    0 $accept: pgm . $end

    $end  shift, and go to state 5


state 3

    1 pgm: gl_dec . fn_def main_fn

    INTEGER  shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    type    go to state 8
    fn_def  go to state 9


state 4

    2 gl_dec: DECL gdec_list . ENDDECL

    ENDDECL  shift, and go to state 10


state 5

    0 $accept: pgm $end .

    $default  accept


state 6

    4 type: INTEGER .

    $default  reduce using rule 4 (type)


state 7

    5 type: BOOLEAN .

    $default  reduce using rule 5 (type)


state 8

    6 fn_def: type . ID '(' arg_list ')' '{' l_dec body '}'

    ID  shift, and go to state 11


state 9

    1 pgm: gl_dec fn_def . main_fn

    INTEGER  shift, and go to state 12

    main_fn  go to state 13


state 10

    2 gl_dec: DECL gdec_list ENDDECL .

    $default  reduce using rule 2 (gl_dec)


state 11

    6 fn_def: type ID . '(' arg_list ')' '{' l_dec body '}'

    '('  shift, and go to state 14


state 12

    7 main_fn: INTEGER . MAIN '(' ')' '{' l_dec body '}'

    MAIN  shift, and go to state 15


state 13

    1 pgm: gl_dec fn_def main_fn .

    $default  reduce using rule 1 (pgm)


state 14

    6 fn_def: type ID '(' . arg_list ')' '{' l_dec body '}'

    INTEGER  shift, and go to state 16
    BOOLEAN  shift, and go to state 17

    $default  reduce using rule 9 (arg_list)

    arg_list  go to state 18
    arg       go to state 19
    arg_type  go to state 20


state 15

    7 main_fn: INTEGER MAIN . '(' ')' '{' l_dec body '}'

    '('  shift, and go to state 21


state 16

   11 arg_type: INTEGER .

    $default  reduce using rule 11 (arg_type)


state 17

   12 arg_type: BOOLEAN .

    $default  reduce using rule 12 (arg_type)


state 18

    6 fn_def: type ID '(' arg_list . ')' '{' l_dec body '}'

    ')'  shift, and go to state 22


state 19

    8 arg_list: arg . ';' arg_list

    ';'  shift, and go to state 23


state 20

   10 arg: arg_type . id_list

    ID   shift, and go to state 24
    '&'  shift, and go to state 25

    id_list  go to state 26


state 21

    7 main_fn: INTEGER MAIN '(' . ')' '{' l_dec body '}'

    ')'  shift, and go to state 27


state 22

    6 fn_def: type ID '(' arg_list ')' . '{' l_dec body '}'

    '{'  shift, and go to state 28


state 23

    8 arg_list: arg ';' . arg_list

    INTEGER  shift, and go to state 16
    BOOLEAN  shift, and go to state 17

    $default  reduce using rule 9 (arg_list)

    arg_list  go to state 29
    arg       go to state 19
    arg_type  go to state 20


state 24

   13 id_list: ID .
   15        | ID . ',' id_list

    ','  shift, and go to state 30

    $default  reduce using rule 13 (id_list)


state 25

   14 id_list: '&' . ID
   16        | '&' . ID ',' id_list

    ID  shift, and go to state 31


state 26

   10 arg: arg_type id_list .

    $default  reduce using rule 10 (arg)


state 27

    7 main_fn: INTEGER MAIN '(' ')' . '{' l_dec body '}'

    '{'  shift, and go to state 32


state 28

    6 fn_def: type ID '(' arg_list ')' '{' . l_dec body '}'

    DECL  shift, and go to state 33

    l_dec  go to state 34


state 29

    8 arg_list: arg ';' arg_list .

    $default  reduce using rule 8 (arg_list)


state 30

   15 id_list: ID ',' . id_list

    ID   shift, and go to state 24
    '&'  shift, and go to state 25

    id_list  go to state 35


state 31

   14 id_list: '&' ID .
   16        | '&' ID . ',' id_list

    ','  shift, and go to state 36

    $default  reduce using rule 14 (id_list)


state 32

    7 main_fn: INTEGER MAIN '(' ')' '{' . l_dec body '}'

    DECL  shift, and go to state 33

    l_dec  go to state 37


state 33

   17 l_dec: DECL . ldec_list ENDDECL

    INTEGER  shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    $default  reduce using rule 19 (ldec_list)

    type       go to state 38
    ldec_list  go to state 39
    ldec_stat  go to state 40


state 34

    6 fn_def: type ID '(' arg_list ')' '{' l_dec . body '}'

    BGN  shift, and go to state 41

    body  go to state 42


state 35

   15 id_list: ID ',' id_list .

    $default  reduce using rule 15 (id_list)


state 36

   16 id_list: '&' ID ',' . id_list

    ID   shift, and go to state 24
    '&'  shift, and go to state 25

    id_list  go to state 43


state 37

    7 main_fn: INTEGER MAIN '(' ')' '{' l_dec . body '}'

    BGN  shift, and go to state 41

    body  go to state 44


state 38

   20 ldec_stat: type . var_list ';'

    ID  shift, and go to state 45

    var_list  go to state 46


state 39

   17 l_dec: DECL ldec_list . ENDDECL

    ENDDECL  shift, and go to state 47


state 40

   18 ldec_list: ldec_stat . ldec_list

    INTEGER  shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    $default  reduce using rule 19 (ldec_list)

    type       go to state 38
    ldec_list  go to state 48
    ldec_stat  go to state 40


state 41

   23 body: BGN . slist END

    ID     shift, and go to state 49
    READ   shift, and go to state 50
    WRITE  shift, and go to state 51
    IF     shift, and go to state 52
    WHILE  shift, and go to state 53

    slist  go to state 54
    stmt   go to state 55


state 42

    6 fn_def: type ID '(' arg_list ')' '{' l_dec body . '}'

    '}'  shift, and go to state 56


state 43

   16 id_list: '&' ID ',' id_list .

    $default  reduce using rule 16 (id_list)


state 44

    7 main_fn: INTEGER MAIN '(' ')' '{' l_dec body . '}'

    '}'  shift, and go to state 57


state 45

   21 var_list: ID .

    $default  reduce using rule 21 (var_list)


state 46

   20 ldec_stat: type var_list . ';'
   22 var_list: var_list . ',' ID

    ';'  shift, and go to state 58
    ','  shift, and go to state 59


state 47

   17 l_dec: DECL ldec_list ENDDECL .

    $default  reduce using rule 17 (l_dec)


state 48

   18 ldec_list: ldec_stat ldec_list .

    $default  reduce using rule 18 (ldec_list)


state 49

   26 stmt: ID . '=' expr ';'
   27     | ID . '[' expr ']' '=' expr ';'

    '['  shift, and go to state 60
    '='  shift, and go to state 61


state 50

   28 stmt: READ . '(' ID ')' ';'
   29     | READ . '(' ID '[' expr ']' ')' ';'

    '('  shift, and go to state 62


state 51

   30 stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 63


state 52

   31 stmt: IF . '(' expr ')' THEN slist ENDIF ';'
   32     | IF . '(' expr ')' THEN slist ELSE slist ENDIF ';'

    '('  shift, and go to state 64


state 53

   33 stmt: WHILE . '(' expr ')' DO slist ENDWHILE ';'

    '('  shift, and go to state 65


state 54

   23 body: BGN slist . END
   24 slist: slist . stmt

    ID     shift, and go to state 49
    READ   shift, and go to state 50
    WRITE  shift, and go to state 51
    IF     shift, and go to state 52
    WHILE  shift, and go to state 53
    END    shift, and go to state 66

    stmt  go to state 67


state 55

   25 slist: stmt .

    $default  reduce using rule 25 (slist)


state 56

    6 fn_def: type ID '(' arg_list ')' '{' l_dec body '}' .

    $default  reduce using rule 6 (fn_def)


state 57

    7 main_fn: INTEGER MAIN '(' ')' '{' l_dec body '}' .

    $default  reduce using rule 7 (main_fn)


state 58

   20 ldec_stat: type var_list ';' .

    $default  reduce using rule 20 (ldec_stat)


state 59

   22 var_list: var_list ',' . ID

    ID  shift, and go to state 68


state 60

   27 stmt: ID '[' . expr ']' '=' expr ';'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 76


state 61

   26 stmt: ID '=' . expr ';'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 77


state 62

   28 stmt: READ '(' . ID ')' ';'
   29     | READ '(' . ID '[' expr ']' ')' ';'

    ID  shift, and go to state 78


state 63

   30 stmt: WRITE '(' . expr ')' ';'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 79


state 64

   31 stmt: IF '(' . expr ')' THEN slist ENDIF ';'
   32     | IF '(' . expr ')' THEN slist ELSE slist ENDIF ';'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 80


state 65

   33 stmt: WHILE '(' . expr ')' DO slist ENDWHILE ';'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 81


state 66

   23 body: BGN slist END .

    $default  reduce using rule 23 (body)


state 67

   24 slist: slist stmt .

    $default  reduce using rule 24 (slist)


state 68

   22 var_list: var_list ',' ID .

    $default  reduce using rule 22 (var_list)


state 69

   41 expr: NUM .

    $default  reduce using rule 41 (expr)


state 70

   38 expr: ID .
   39     | ID . '[' expr ']'
   40     | ID . '(' act_par ')'

    '['  shift, and go to state 82
    '('  shift, and go to state 83

    $default  reduce using rule 38 (expr)


state 71

   43 expr: TRUE .

    $default  reduce using rule 43 (expr)


state 72

   44 expr: FALSE .

    $default  reduce using rule 44 (expr)


state 73

   42 expr: '-' . NUM

    NUM  shift, and go to state 84


state 74

   59 expr: NOT . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 85


state 75

   50 expr: '(' . expr ')'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 86


state 76

   27 stmt: ID '[' expr . ']' '=' expr ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ']'  shift, and go to state 100


state 77

   26 stmt: ID '=' expr . ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ';'  shift, and go to state 101


state 78

   28 stmt: READ '(' ID . ')' ';'
   29     | READ '(' ID . '[' expr ']' ')' ';'

    '['  shift, and go to state 102
    ')'  shift, and go to state 103


state 79

   30 stmt: WRITE '(' expr . ')' ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ')'  shift, and go to state 104


state 80

   31 stmt: IF '(' expr . ')' THEN slist ENDIF ';'
   32     | IF '(' expr . ')' THEN slist ELSE slist ENDIF ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ')'  shift, and go to state 105


state 81

   33 stmt: WHILE '(' expr . ')' DO slist ENDWHILE ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ')'  shift, and go to state 106


state 82

   39 expr: ID '[' . expr ']'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 107


state 83

   40 expr: ID '(' . act_par ')'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75
    '&'    shift, and go to state 108

    act_par  go to state 109
    expr     go to state 110


state 84

   42 expr: '-' NUM .

    $default  reduce using rule 42 (expr)


state 85

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | NOT expr .

    $default  reduce using rule 59 (expr)


state 86

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   50     | '(' expr . ')'
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ')'  shift, and go to state 111


state 87

   51 expr: expr '>' . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 112


state 88

   52 expr: expr '<' . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 113


state 89

   56 expr: expr NE . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 114


state 90

   53 expr: expr LE . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 115


state 91

   54 expr: expr GE . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 116


state 92

   55 expr: expr EQ . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 117


state 93

   58 expr: expr OR . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 118


state 94

   57 expr: expr AND . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 119


state 95

   45 expr: expr '+' . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 120


state 96

   46 expr: expr '-' . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 121


state 97

   47 expr: expr '*' . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 122


state 98

   48 expr: expr '/' . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 123


state 99

   49 expr: expr '%' . expr

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 124


state 100

   27 stmt: ID '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 125


state 101

   26 stmt: ID '=' expr ';' .

    $default  reduce using rule 26 (stmt)


state 102

   29 stmt: READ '(' ID '[' . expr ']' ')' ';'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 126


state 103

   28 stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 127


state 104

   30 stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 128


state 105

   31 stmt: IF '(' expr ')' . THEN slist ENDIF ';'
   32     | IF '(' expr ')' . THEN slist ELSE slist ENDIF ';'

    THEN  shift, and go to state 129


state 106

   33 stmt: WHILE '(' expr ')' . DO slist ENDWHILE ';'

    DO  shift, and go to state 130


state 107

   39 expr: ID '[' expr . ']'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ']'  shift, and go to state 131


state 108

   34 act_par: '&' . ID
   36        | '&' . ID ',' act_par

    ID  shift, and go to state 132


state 109

   40 expr: ID '(' act_par . ')'

    ')'  shift, and go to state 133


state 110

   35 act_par: expr .
   37        | expr . ',' act_par
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ','  shift, and go to state 134

    $default  reduce using rule 35 (act_par)


state 111

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


state 112

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   51     | expr '>' expr .
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 51 (expr)


state 113

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   52     | expr '<' expr .
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 52 (expr)


state 114

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   56     | expr NE expr .
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 56 (expr)


state 115

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   53     | expr LE expr .
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 53 (expr)


state 116

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   54     | expr GE expr .
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 54 (expr)


state 117

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   55     | expr EQ expr .
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 55 (expr)


state 118

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   58     | expr OR expr .

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    $default  reduce using rule 58 (expr)


state 119

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   57     | expr AND expr .
   58     | expr . OR expr

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    $default  reduce using rule 57 (expr)


state 120

   45 expr: expr . '+' expr
   45     | expr '+' expr .
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    $default  reduce using rule 45 (expr)


state 121

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   46     | expr '-' expr .
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99

    $default  reduce using rule 46 (expr)


state 122

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   47     | expr '*' expr .
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    $default  reduce using rule 47 (expr)


state 123

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   48     | expr '/' expr .
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    $default  reduce using rule 48 (expr)


state 124

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   49     | expr '%' expr .
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    $default  reduce using rule 49 (expr)


state 125

   27 stmt: ID '[' expr ']' '=' . expr ';'

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75

    expr  go to state 135


state 126

   29 stmt: READ '(' ID '[' expr . ']' ')' ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ']'  shift, and go to state 136


state 127

   28 stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 28 (stmt)


state 128

   30 stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 30 (stmt)


state 129

   31 stmt: IF '(' expr ')' THEN . slist ENDIF ';'
   32     | IF '(' expr ')' THEN . slist ELSE slist ENDIF ';'

    ID     shift, and go to state 49
    READ   shift, and go to state 50
    WRITE  shift, and go to state 51
    IF     shift, and go to state 52
    WHILE  shift, and go to state 53

    slist  go to state 137
    stmt   go to state 55


state 130

   33 stmt: WHILE '(' expr ')' DO . slist ENDWHILE ';'

    ID     shift, and go to state 49
    READ   shift, and go to state 50
    WRITE  shift, and go to state 51
    IF     shift, and go to state 52
    WHILE  shift, and go to state 53

    slist  go to state 138
    stmt   go to state 55


state 131

   39 expr: ID '[' expr ']' .

    $default  reduce using rule 39 (expr)


state 132

   34 act_par: '&' ID .
   36        | '&' ID . ',' act_par

    ','  shift, and go to state 139

    $default  reduce using rule 34 (act_par)


state 133

   40 expr: ID '(' act_par ')' .

    $default  reduce using rule 40 (expr)


state 134

   37 act_par: expr ',' . act_par

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75
    '&'    shift, and go to state 108

    act_par  go to state 140
    expr     go to state 110


state 135

   27 stmt: ID '[' expr ']' '=' expr . ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | expr . '%' expr
   51     | expr . '>' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr

    '>'  shift, and go to state 87
    '<'  shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    GE   shift, and go to state 91
    EQ   shift, and go to state 92
    OR   shift, and go to state 93
    AND  shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98
    '%'  shift, and go to state 99
    ';'  shift, and go to state 141


state 136

   29 stmt: READ '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 142


state 137

   24 slist: slist . stmt
   31 stmt: IF '(' expr ')' THEN slist . ENDIF ';'
   32     | IF '(' expr ')' THEN slist . ELSE slist ENDIF ';'

    ID     shift, and go to state 49
    READ   shift, and go to state 50
    WRITE  shift, and go to state 51
    IF     shift, and go to state 52
    ELSE   shift, and go to state 143
    ENDIF  shift, and go to state 144
    WHILE  shift, and go to state 53

    stmt  go to state 67


state 138

   24 slist: slist . stmt
   33 stmt: WHILE '(' expr ')' DO slist . ENDWHILE ';'

    ID        shift, and go to state 49
    READ      shift, and go to state 50
    WRITE     shift, and go to state 51
    IF        shift, and go to state 52
    WHILE     shift, and go to state 53
    ENDWHILE  shift, and go to state 145

    stmt  go to state 67


state 139

   36 act_par: '&' ID ',' . act_par

    NUM    shift, and go to state 69
    ID     shift, and go to state 70
    TRUE   shift, and go to state 71
    FALSE  shift, and go to state 72
    '-'    shift, and go to state 73
    NOT    shift, and go to state 74
    '('    shift, and go to state 75
    '&'    shift, and go to state 108

    act_par  go to state 146
    expr     go to state 110


state 140

   37 act_par: expr ',' act_par .

    $default  reduce using rule 37 (act_par)


state 141

   27 stmt: ID '[' expr ']' '=' expr ';' .

    $default  reduce using rule 27 (stmt)


state 142

   29 stmt: READ '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 147


state 143

   32 stmt: IF '(' expr ')' THEN slist ELSE . slist ENDIF ';'

    ID     shift, and go to state 49
    READ   shift, and go to state 50
    WRITE  shift, and go to state 51
    IF     shift, and go to state 52
    WHILE  shift, and go to state 53

    slist  go to state 148
    stmt   go to state 55


state 144

   31 stmt: IF '(' expr ')' THEN slist ENDIF . ';'

    ';'  shift, and go to state 149


state 145

   33 stmt: WHILE '(' expr ')' DO slist ENDWHILE . ';'

    ';'  shift, and go to state 150


state 146

   36 act_par: '&' ID ',' act_par .

    $default  reduce using rule 36 (act_par)


state 147

   29 stmt: READ '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 29 (stmt)


state 148

   24 slist: slist . stmt
   32 stmt: IF '(' expr ')' THEN slist ELSE slist . ENDIF ';'

    ID     shift, and go to state 49
    READ   shift, and go to state 50
    WRITE  shift, and go to state 51
    IF     shift, and go to state 52
    ENDIF  shift, and go to state 151
    WHILE  shift, and go to state 53

    stmt  go to state 67


state 149

   31 stmt: IF '(' expr ')' THEN slist ENDIF ';' .

    $default  reduce using rule 31 (stmt)


state 150

   33 stmt: WHILE '(' expr ')' DO slist ENDWHILE ';' .

    $default  reduce using rule 33 (stmt)


state 151

   32 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF . ';'

    ';'  shift, and go to state 152


state 152

   32 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF ';' .

    $default  reduce using rule 32 (stmt)
