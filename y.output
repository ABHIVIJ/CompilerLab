Grammar

    0 $accept: pgm $end

    1 pgm: gl_dec fn_def_list main_fn

    2 gl_dec: DECL gdec_list ENDDECL

    3 gdec_list: gdec_stat gdec_list
    4          | /* empty */

    5 gdec_stat: type gid_list ';'

    6 type: INTEGER
    7     | BOOLEAN

    8 gid_list: gid_list ',' gid
    9         | gid

   10 gid: ID
   11    | ID '[' NUM ']'
   12    | ID '(' arg_list ')'

   13 fn_def_list: fn_def_list fn_def
   14            | /* empty */

   15 fn_def: type ID '(' arg_list ')' '{' l_dec body '}'

   16 main_fn: INTEGER MAIN '(' ')' '{' l_dec body '}'

   17 arg_list: arg ';' arg_list
   18         | /* empty */

   19 arg: arg_type id_list

   20 arg_type: INTEGER
   21         | BOOLEAN

   22 id_list: ID
   23        | '&' ID
   24        | ID ',' id_list
   25        | '&' ID ',' id_list

   26 l_dec: DECL ldec_list ENDDECL

   27 ldec_list: ldec_stat ldec_list
   28          | /* empty */

   29 ldec_stat: type var_list ';'

   30 var_list: ID
   31         | var_list ',' ID

   32 body: BGN slist END

   33 slist: slist stmt
   34      | stmt

   35 stmt: ID '=' expr ';'
   36     | ID '[' expr ']' '=' expr ';'
   37     | READ '(' ID ')' ';'
   38     | READ '(' ID '[' expr ']' ')' ';'
   39     | WRITE '(' expr ')' ';'
   40     | IF '(' expr ')' THEN slist ENDIF ';'
   41     | IF '(' expr ')' THEN slist ELSE slist ENDIF ';'
   42     | WHILE '(' expr ')' DO slist ENDWHILE ';'

   43 act_par: '&' ID
   44        | expr
   45        | '&' ID ',' act_par
   46        | expr ',' act_par

   47 expr: ID
   48     | ID '[' expr ']'
   49     | ID '(' act_par ')'
   50     | NUM
   51     | '-' NUM
   52     | TRUE
   53     | FALSE
   54     | expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr '/' expr
   58     | expr '%' expr
   59     | '(' expr ')'
   60     | expr '>' expr
   61     | expr '<' expr
   62     | expr LE expr
   63     | expr GE expr
   64     | expr EQ expr
   65     | expr NE expr
   66     | expr AND expr
   67     | expr OR expr
   68     | NOT expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 58
'&' (38) 23 25 43 45
'(' (40) 12 15 16 37 38 39 40 41 42 49 59
')' (41) 12 15 16 37 38 39 40 41 42 49 59
'*' (42) 56
'+' (43) 54
',' (44) 8 24 25 31 45 46
'-' (45) 51 55
'/' (47) 57
';' (59) 5 17 29 35 36 37 38 39 40 41 42
'<' (60) 61
'=' (61) 35 36
'>' (62) 60
'[' (91) 11 36 38 48
']' (93) 11 36 38 48
'{' (123) 15 16
'}' (125) 15 16
error (256)
NUM (258) 11 50 51
ID (259) 10 11 12 15 22 23 24 25 30 31 35 36 37 38 43 45 47 48 49
UMINUS (260)
READ (261) 37 38
WRITE (262) 39
IF (263) 40 41
THEN (264) 40 41
ELSE (265) 41
ENDIF (266) 40 41
WHILE (267) 42
DO (268) 42
ENDWHILE (269) 42
DECL (270) 2 26
ENDDECL (271) 2 26
INTEGER (272) 6 16 20
BOOLEAN (273) 7 21
TRUE (274) 52
FALSE (275) 53
BGN (276) 32
END (277) 32
MAIN (278) 16
NE (279) 65
LE (280) 62
GE (281) 63
EQ (282) 64
OR (283) 67
AND (284) 66
NOT (285) 68


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
pgm (49)
    on left: 1, on right: 0
gl_dec (50)
    on left: 2, on right: 1
gdec_list (51)
    on left: 3 4, on right: 2 3
gdec_stat (52)
    on left: 5, on right: 3
type (53)
    on left: 6 7, on right: 5 15 29
gid_list (54)
    on left: 8 9, on right: 5 8
gid (55)
    on left: 10 11 12, on right: 8 9
fn_def_list (56)
    on left: 13 14, on right: 1 13
fn_def (57)
    on left: 15, on right: 13
main_fn (58)
    on left: 16, on right: 1
arg_list (59)
    on left: 17 18, on right: 12 15 17
arg (60)
    on left: 19, on right: 17
arg_type (61)
    on left: 20 21, on right: 19
id_list (62)
    on left: 22 23 24 25, on right: 19 24 25
l_dec (63)
    on left: 26, on right: 15 16
ldec_list (64)
    on left: 27 28, on right: 26 27
ldec_stat (65)
    on left: 29, on right: 27
var_list (66)
    on left: 30 31, on right: 29 31
body (67)
    on left: 32, on right: 15 16
slist (68)
    on left: 33 34, on right: 32 33 40 41 42
stmt (69)
    on left: 35 36 37 38 39 40 41 42, on right: 33 34
act_par (70)
    on left: 43 44 45 46, on right: 45 46 49
expr (71)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68, on right: 35 36 38 39 40 41 42 44 46 48 54 55 56 57
    58 59 60 61 62 63 64 65 66 67 68


state 0

    0 $accept: . pgm $end

    DECL  shift, and go to state 1

    pgm     go to state 2
    gl_dec  go to state 3


state 1

    2 gl_dec: DECL . gdec_list ENDDECL

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 4 (gdec_list)

    gdec_list  go to state 6
    gdec_stat  go to state 7
    type       go to state 8


state 2

    0 $accept: pgm . $end

    $end  shift, and go to state 9


state 3

    1 pgm: gl_dec . fn_def_list main_fn

    $default  reduce using rule 14 (fn_def_list)

    fn_def_list  go to state 10


state 4

    6 type: INTEGER .

    $default  reduce using rule 6 (type)


state 5

    7 type: BOOLEAN .

    $default  reduce using rule 7 (type)


state 6

    2 gl_dec: DECL gdec_list . ENDDECL

    ENDDECL  shift, and go to state 11


state 7

    3 gdec_list: gdec_stat . gdec_list

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 4 (gdec_list)

    gdec_list  go to state 12
    gdec_stat  go to state 7
    type       go to state 8


state 8

    5 gdec_stat: type . gid_list ';'

    ID  shift, and go to state 13

    gid_list  go to state 14
    gid       go to state 15


state 9

    0 $accept: pgm $end .

    $default  accept


state 10

    1 pgm: gl_dec fn_def_list . main_fn
   13 fn_def_list: fn_def_list . fn_def

    INTEGER  shift, and go to state 16
    BOOLEAN  shift, and go to state 5

    type     go to state 17
    fn_def   go to state 18
    main_fn  go to state 19


state 11

    2 gl_dec: DECL gdec_list ENDDECL .

    $default  reduce using rule 2 (gl_dec)


state 12

    3 gdec_list: gdec_stat gdec_list .

    $default  reduce using rule 3 (gdec_list)


state 13

   10 gid: ID .
   11    | ID . '[' NUM ']'
   12    | ID . '(' arg_list ')'

    '['  shift, and go to state 20
    '('  shift, and go to state 21

    $default  reduce using rule 10 (gid)


state 14

    5 gdec_stat: type gid_list . ';'
    8 gid_list: gid_list . ',' gid

    ';'  shift, and go to state 22
    ','  shift, and go to state 23


state 15

    9 gid_list: gid .

    $default  reduce using rule 9 (gid_list)


state 16

    6 type: INTEGER .
   16 main_fn: INTEGER . MAIN '(' ')' '{' l_dec body '}'

    MAIN  shift, and go to state 24

    $default  reduce using rule 6 (type)


state 17

   15 fn_def: type . ID '(' arg_list ')' '{' l_dec body '}'

    ID  shift, and go to state 25


state 18

   13 fn_def_list: fn_def_list fn_def .

    $default  reduce using rule 13 (fn_def_list)


state 19

    1 pgm: gl_dec fn_def_list main_fn .

    $default  reduce using rule 1 (pgm)


state 20

   11 gid: ID '[' . NUM ']'

    NUM  shift, and go to state 26


state 21

   12 gid: ID '(' . arg_list ')'

    INTEGER  shift, and go to state 27
    BOOLEAN  shift, and go to state 28

    $default  reduce using rule 18 (arg_list)

    arg_list  go to state 29
    arg       go to state 30
    arg_type  go to state 31


state 22

    5 gdec_stat: type gid_list ';' .

    $default  reduce using rule 5 (gdec_stat)


state 23

    8 gid_list: gid_list ',' . gid

    ID  shift, and go to state 13

    gid  go to state 32


state 24

   16 main_fn: INTEGER MAIN . '(' ')' '{' l_dec body '}'

    '('  shift, and go to state 33


state 25

   15 fn_def: type ID . '(' arg_list ')' '{' l_dec body '}'

    '('  shift, and go to state 34


state 26

   11 gid: ID '[' NUM . ']'

    ']'  shift, and go to state 35


state 27

   20 arg_type: INTEGER .

    $default  reduce using rule 20 (arg_type)


state 28

   21 arg_type: BOOLEAN .

    $default  reduce using rule 21 (arg_type)


state 29

   12 gid: ID '(' arg_list . ')'

    ')'  shift, and go to state 36


state 30

   17 arg_list: arg . ';' arg_list

    ';'  shift, and go to state 37


state 31

   19 arg: arg_type . id_list

    ID   shift, and go to state 38
    '&'  shift, and go to state 39

    id_list  go to state 40


state 32

    8 gid_list: gid_list ',' gid .

    $default  reduce using rule 8 (gid_list)


state 33

   16 main_fn: INTEGER MAIN '(' . ')' '{' l_dec body '}'

    ')'  shift, and go to state 41


state 34

   15 fn_def: type ID '(' . arg_list ')' '{' l_dec body '}'

    INTEGER  shift, and go to state 27
    BOOLEAN  shift, and go to state 28

    $default  reduce using rule 18 (arg_list)

    arg_list  go to state 42
    arg       go to state 30
    arg_type  go to state 31


state 35

   11 gid: ID '[' NUM ']' .

    $default  reduce using rule 11 (gid)


state 36

   12 gid: ID '(' arg_list ')' .

    $default  reduce using rule 12 (gid)


state 37

   17 arg_list: arg ';' . arg_list

    INTEGER  shift, and go to state 27
    BOOLEAN  shift, and go to state 28

    $default  reduce using rule 18 (arg_list)

    arg_list  go to state 43
    arg       go to state 30
    arg_type  go to state 31


state 38

   22 id_list: ID .
   24        | ID . ',' id_list

    ','  shift, and go to state 44

    $default  reduce using rule 22 (id_list)


state 39

   23 id_list: '&' . ID
   25        | '&' . ID ',' id_list

    ID  shift, and go to state 45


state 40

   19 arg: arg_type id_list .

    $default  reduce using rule 19 (arg)


state 41

   16 main_fn: INTEGER MAIN '(' ')' . '{' l_dec body '}'

    '{'  shift, and go to state 46


state 42

   15 fn_def: type ID '(' arg_list . ')' '{' l_dec body '}'

    ')'  shift, and go to state 47


state 43

   17 arg_list: arg ';' arg_list .

    $default  reduce using rule 17 (arg_list)


state 44

   24 id_list: ID ',' . id_list

    ID   shift, and go to state 38
    '&'  shift, and go to state 39

    id_list  go to state 48


state 45

   23 id_list: '&' ID .
   25        | '&' ID . ',' id_list

    ','  shift, and go to state 49

    $default  reduce using rule 23 (id_list)


state 46

   16 main_fn: INTEGER MAIN '(' ')' '{' . l_dec body '}'

    DECL  shift, and go to state 50

    l_dec  go to state 51


state 47

   15 fn_def: type ID '(' arg_list ')' . '{' l_dec body '}'

    '{'  shift, and go to state 52


state 48

   24 id_list: ID ',' id_list .

    $default  reduce using rule 24 (id_list)


state 49

   25 id_list: '&' ID ',' . id_list

    ID   shift, and go to state 38
    '&'  shift, and go to state 39

    id_list  go to state 53


state 50

   26 l_dec: DECL . ldec_list ENDDECL

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 28 (ldec_list)

    type       go to state 54
    ldec_list  go to state 55
    ldec_stat  go to state 56


state 51

   16 main_fn: INTEGER MAIN '(' ')' '{' l_dec . body '}'

    BGN  shift, and go to state 57

    body  go to state 58


state 52

   15 fn_def: type ID '(' arg_list ')' '{' . l_dec body '}'

    DECL  shift, and go to state 50

    l_dec  go to state 59


state 53

   25 id_list: '&' ID ',' id_list .

    $default  reduce using rule 25 (id_list)


state 54

   29 ldec_stat: type . var_list ';'

    ID  shift, and go to state 60

    var_list  go to state 61


state 55

   26 l_dec: DECL ldec_list . ENDDECL

    ENDDECL  shift, and go to state 62


state 56

   27 ldec_list: ldec_stat . ldec_list

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 28 (ldec_list)

    type       go to state 54
    ldec_list  go to state 63
    ldec_stat  go to state 56


state 57

   32 body: BGN . slist END

    ID     shift, and go to state 64
    READ   shift, and go to state 65
    WRITE  shift, and go to state 66
    IF     shift, and go to state 67
    WHILE  shift, and go to state 68

    slist  go to state 69
    stmt   go to state 70


state 58

   16 main_fn: INTEGER MAIN '(' ')' '{' l_dec body . '}'

    '}'  shift, and go to state 71


state 59

   15 fn_def: type ID '(' arg_list ')' '{' l_dec . body '}'

    BGN  shift, and go to state 57

    body  go to state 72


state 60

   30 var_list: ID .

    $default  reduce using rule 30 (var_list)


state 61

   29 ldec_stat: type var_list . ';'
   31 var_list: var_list . ',' ID

    ';'  shift, and go to state 73
    ','  shift, and go to state 74


state 62

   26 l_dec: DECL ldec_list ENDDECL .

    $default  reduce using rule 26 (l_dec)


state 63

   27 ldec_list: ldec_stat ldec_list .

    $default  reduce using rule 27 (ldec_list)


state 64

   35 stmt: ID . '=' expr ';'
   36     | ID . '[' expr ']' '=' expr ';'

    '['  shift, and go to state 75
    '='  shift, and go to state 76


state 65

   37 stmt: READ . '(' ID ')' ';'
   38     | READ . '(' ID '[' expr ']' ')' ';'

    '('  shift, and go to state 77


state 66

   39 stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 78


state 67

   40 stmt: IF . '(' expr ')' THEN slist ENDIF ';'
   41     | IF . '(' expr ')' THEN slist ELSE slist ENDIF ';'

    '('  shift, and go to state 79


state 68

   42 stmt: WHILE . '(' expr ')' DO slist ENDWHILE ';'

    '('  shift, and go to state 80


state 69

   32 body: BGN slist . END
   33 slist: slist . stmt

    ID     shift, and go to state 64
    READ   shift, and go to state 65
    WRITE  shift, and go to state 66
    IF     shift, and go to state 67
    WHILE  shift, and go to state 68
    END    shift, and go to state 81

    stmt  go to state 82


state 70

   34 slist: stmt .

    $default  reduce using rule 34 (slist)


state 71

   16 main_fn: INTEGER MAIN '(' ')' '{' l_dec body '}' .

    $default  reduce using rule 16 (main_fn)


state 72

   15 fn_def: type ID '(' arg_list ')' '{' l_dec body . '}'

    '}'  shift, and go to state 83


state 73

   29 ldec_stat: type var_list ';' .

    $default  reduce using rule 29 (ldec_stat)


state 74

   31 var_list: var_list ',' . ID

    ID  shift, and go to state 84


state 75

   36 stmt: ID '[' . expr ']' '=' expr ';'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 92


state 76

   35 stmt: ID '=' . expr ';'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 93


state 77

   37 stmt: READ '(' . ID ')' ';'
   38     | READ '(' . ID '[' expr ']' ')' ';'

    ID  shift, and go to state 94


state 78

   39 stmt: WRITE '(' . expr ')' ';'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 95


state 79

   40 stmt: IF '(' . expr ')' THEN slist ENDIF ';'
   41     | IF '(' . expr ')' THEN slist ELSE slist ENDIF ';'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 96


state 80

   42 stmt: WHILE '(' . expr ')' DO slist ENDWHILE ';'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 97


state 81

   32 body: BGN slist END .

    $default  reduce using rule 32 (body)


state 82

   33 slist: slist stmt .

    $default  reduce using rule 33 (slist)


state 83

   15 fn_def: type ID '(' arg_list ')' '{' l_dec body '}' .

    $default  reduce using rule 15 (fn_def)


state 84

   31 var_list: var_list ',' ID .

    $default  reduce using rule 31 (var_list)


state 85

   50 expr: NUM .

    $default  reduce using rule 50 (expr)


state 86

   47 expr: ID .
   48     | ID . '[' expr ']'
   49     | ID . '(' act_par ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99

    $default  reduce using rule 47 (expr)


state 87

   52 expr: TRUE .

    $default  reduce using rule 52 (expr)


state 88

   53 expr: FALSE .

    $default  reduce using rule 53 (expr)


state 89

   51 expr: '-' . NUM

    NUM  shift, and go to state 100


state 90

   68 expr: NOT . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 101


state 91

   59 expr: '(' . expr ')'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 102


state 92

   36 stmt: ID '[' expr . ']' '=' expr ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ']'  shift, and go to state 116


state 93

   35 stmt: ID '=' expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ';'  shift, and go to state 117


state 94

   37 stmt: READ '(' ID . ')' ';'
   38     | READ '(' ID . '[' expr ']' ')' ';'

    '['  shift, and go to state 118
    ')'  shift, and go to state 119


state 95

   39 stmt: WRITE '(' expr . ')' ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ')'  shift, and go to state 120


state 96

   40 stmt: IF '(' expr . ')' THEN slist ENDIF ';'
   41     | IF '(' expr . ')' THEN slist ELSE slist ENDIF ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ')'  shift, and go to state 121


state 97

   42 stmt: WHILE '(' expr . ')' DO slist ENDWHILE ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ')'  shift, and go to state 122


state 98

   48 expr: ID '[' . expr ']'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 123


state 99

   49 expr: ID '(' . act_par ')'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91
    '&'    shift, and go to state 124

    act_par  go to state 125
    expr     go to state 126


state 100

   51 expr: '-' NUM .

    $default  reduce using rule 51 (expr)


state 101

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr
   68     | NOT expr .

    $default  reduce using rule 68 (expr)


state 102

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | '(' expr . ')'
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ')'  shift, and go to state 127


state 103

   60 expr: expr '>' . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 128


state 104

   61 expr: expr '<' . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 129


state 105

   65 expr: expr NE . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 130


state 106

   62 expr: expr LE . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 131


state 107

   63 expr: expr GE . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 132


state 108

   64 expr: expr EQ . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 133


state 109

   67 expr: expr OR . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 134


state 110

   66 expr: expr AND . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 135


state 111

   54 expr: expr '+' . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 136


state 112

   55 expr: expr '-' . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 137


state 113

   56 expr: expr '*' . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 138


state 114

   57 expr: expr '/' . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 139


state 115

   58 expr: expr '%' . expr

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 140


state 116

   36 stmt: ID '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 141


state 117

   35 stmt: ID '=' expr ';' .

    $default  reduce using rule 35 (stmt)


state 118

   38 stmt: READ '(' ID '[' . expr ']' ')' ';'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 142


state 119

   37 stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 143


state 120

   39 stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 144


state 121

   40 stmt: IF '(' expr ')' . THEN slist ENDIF ';'
   41     | IF '(' expr ')' . THEN slist ELSE slist ENDIF ';'

    THEN  shift, and go to state 145


state 122

   42 stmt: WHILE '(' expr ')' . DO slist ENDWHILE ';'

    DO  shift, and go to state 146


state 123

   48 expr: ID '[' expr . ']'
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ']'  shift, and go to state 147


state 124

   43 act_par: '&' . ID
   45        | '&' . ID ',' act_par

    ID  shift, and go to state 148


state 125

   49 expr: ID '(' act_par . ')'

    ')'  shift, and go to state 149


state 126

   44 act_par: expr .
   46        | expr . ',' act_par
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ','  shift, and go to state 150

    $default  reduce using rule 44 (act_par)


state 127

   59 expr: '(' expr ')' .

    $default  reduce using rule 59 (expr)


state 128

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   60     | expr '>' expr .
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 60 (expr)


state 129

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   61     | expr '<' expr .
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 61 (expr)


state 130

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   65     | expr NE expr .
   66     | expr . AND expr
   67     | expr . OR expr

    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 65 (expr)


state 131

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   62     | expr LE expr .
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 62 (expr)


state 132

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   63     | expr GE expr .
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 63 (expr)


state 133

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   64     | expr EQ expr .
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 64 (expr)


state 134

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr
   67     | expr OR expr .

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 67 (expr)


state 135

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   66     | expr AND expr .
   67     | expr . OR expr

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 66 (expr)


state 136

   54 expr: expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 54 (expr)


state 137

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 55 (expr)


state 138

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    $default  reduce using rule 56 (expr)


state 139

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   57     | expr '/' expr .
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    $default  reduce using rule 57 (expr)


state 140

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   58     | expr '%' expr .
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    $default  reduce using rule 58 (expr)


state 141

   36 stmt: ID '[' expr ']' '=' . expr ';'

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 151


state 142

   38 stmt: READ '(' ID '[' expr . ']' ')' ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ']'  shift, and go to state 152


state 143

   37 stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 37 (stmt)


state 144

   39 stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 39 (stmt)


state 145

   40 stmt: IF '(' expr ')' THEN . slist ENDIF ';'
   41     | IF '(' expr ')' THEN . slist ELSE slist ENDIF ';'

    ID     shift, and go to state 64
    READ   shift, and go to state 65
    WRITE  shift, and go to state 66
    IF     shift, and go to state 67
    WHILE  shift, and go to state 68

    slist  go to state 153
    stmt   go to state 70


state 146

   42 stmt: WHILE '(' expr ')' DO . slist ENDWHILE ';'

    ID     shift, and go to state 64
    READ   shift, and go to state 65
    WRITE  shift, and go to state 66
    IF     shift, and go to state 67
    WHILE  shift, and go to state 68

    slist  go to state 154
    stmt   go to state 70


state 147

   48 expr: ID '[' expr ']' .

    $default  reduce using rule 48 (expr)


state 148

   43 act_par: '&' ID .
   45        | '&' ID . ',' act_par

    ','  shift, and go to state 155

    $default  reduce using rule 43 (act_par)


state 149

   49 expr: ID '(' act_par ')' .

    $default  reduce using rule 49 (expr)


state 150

   46 act_par: expr ',' . act_par

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91
    '&'    shift, and go to state 124

    act_par  go to state 156
    expr     go to state 126


state 151

   36 stmt: ID '[' expr ']' '=' expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . AND expr
   67     | expr . OR expr

    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    NE   shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    EQ   shift, and go to state 108
    OR   shift, and go to state 109
    AND  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    ';'  shift, and go to state 157


state 152

   38 stmt: READ '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 158


state 153

   33 slist: slist . stmt
   40 stmt: IF '(' expr ')' THEN slist . ENDIF ';'
   41     | IF '(' expr ')' THEN slist . ELSE slist ENDIF ';'

    ID     shift, and go to state 64
    READ   shift, and go to state 65
    WRITE  shift, and go to state 66
    IF     shift, and go to state 67
    ELSE   shift, and go to state 159
    ENDIF  shift, and go to state 160
    WHILE  shift, and go to state 68

    stmt  go to state 82


state 154

   33 slist: slist . stmt
   42 stmt: WHILE '(' expr ')' DO slist . ENDWHILE ';'

    ID        shift, and go to state 64
    READ      shift, and go to state 65
    WRITE     shift, and go to state 66
    IF        shift, and go to state 67
    WHILE     shift, and go to state 68
    ENDWHILE  shift, and go to state 161

    stmt  go to state 82


state 155

   45 act_par: '&' ID ',' . act_par

    NUM    shift, and go to state 85
    ID     shift, and go to state 86
    TRUE   shift, and go to state 87
    FALSE  shift, and go to state 88
    '-'    shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91
    '&'    shift, and go to state 124

    act_par  go to state 162
    expr     go to state 126


state 156

   46 act_par: expr ',' act_par .

    $default  reduce using rule 46 (act_par)


state 157

   36 stmt: ID '[' expr ']' '=' expr ';' .

    $default  reduce using rule 36 (stmt)


state 158

   38 stmt: READ '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 163


state 159

   41 stmt: IF '(' expr ')' THEN slist ELSE . slist ENDIF ';'

    ID     shift, and go to state 64
    READ   shift, and go to state 65
    WRITE  shift, and go to state 66
    IF     shift, and go to state 67
    WHILE  shift, and go to state 68

    slist  go to state 164
    stmt   go to state 70


state 160

   40 stmt: IF '(' expr ')' THEN slist ENDIF . ';'

    ';'  shift, and go to state 165


state 161

   42 stmt: WHILE '(' expr ')' DO slist ENDWHILE . ';'

    ';'  shift, and go to state 166


state 162

   45 act_par: '&' ID ',' act_par .

    $default  reduce using rule 45 (act_par)


state 163

   38 stmt: READ '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 38 (stmt)


state 164

   33 slist: slist . stmt
   41 stmt: IF '(' expr ')' THEN slist ELSE slist . ENDIF ';'

    ID     shift, and go to state 64
    READ   shift, and go to state 65
    WRITE  shift, and go to state 66
    IF     shift, and go to state 67
    ENDIF  shift, and go to state 167
    WHILE  shift, and go to state 68

    stmt  go to state 82


state 165

   40 stmt: IF '(' expr ')' THEN slist ENDIF ';' .

    $default  reduce using rule 40 (stmt)


state 166

   42 stmt: WHILE '(' expr ')' DO slist ENDWHILE ';' .

    $default  reduce using rule 42 (stmt)


state 167

   41 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF . ';'

    ';'  shift, and go to state 168


state 168

   41 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF ';' .

    $default  reduce using rule 41 (stmt)
