Nonterminals useless in grammar

   gdec_stat
   gid_list
   gid


Rules useless in grammar

   59 gdec_list: gdec_stat gdec_list

   60 gdec_stat: type gid_list ';'

   61 gid_list: gid_list ',' gid

   62 gid: ID
   63    | ID '[' NUM ']'
   64    | ID '(' arg_list ')'


Grammar

    0 $accept: pgm $end

    1 pgm: gl_dec fn_def main_fn

    2 gl_dec: DECL gdec_list ENDDECL

    3 gdec_list: /* empty */

    4 type: INTEGER
    5     | BOOLEAN

    6 fn_def: type ID '(' arg_list ')' '{' ldec_list body '}'

    7 main_fn: INTEGER MAIN '(' ')' '{' ldec_list body '}'

    8 arg_list: arg ';' arg_list
    9         | /* empty */

   10 arg: arg_type id_list

   11 arg_type: INTEGER
   12         | BOOLEAN

   13 id_list: ID
   14        | '&' ID
   15        | ID ',' id_list
   16        | '&' ID ',' id_list

   17 ldec_list: ldec_stat ldec_list
   18          | /* empty */

   19 ldec_stat: type var_list ';'

   20 var_list: ID
   21         | var_list ',' ID

   22 body: BGN slist END

   23 slist: slist stmt
   24      | stmt

   25 stmt: ID '=' expr ';'
   26     | ID '[' expr ']' '=' expr ';'
   27     | READ '(' ID ')' ';'
   28     | READ '(' ID '[' expr ']' ')' ';'
   29     | WRITE '(' expr ')' ';'
   30     | IF '(' expr ')' THEN slist ENDIF ';'
   31     | IF '(' expr ')' THEN slist ELSE slist ENDIF ';'
   32     | WHILE '(' expr ')' DO slist ENDWHILE ';'

   33 act_par: '&' ID
   34        | expr
   35        | '&' ID ',' act_par
   36        | expr ',' act_par

   37 expr: ID
   38     | ID '[' expr ']'
   39     | ID '(' act_par ')'
   40     | NUM
   41     | '-' NUM
   42     | TRUE
   43     | FALSE
   44     | expr '+' expr
   45     | expr '-' expr
   46     | expr '*' expr
   47     | expr '/' expr
   48     | expr '%' expr
   49     | '(' expr ')'
   50     | expr '>' expr
   51     | expr '<' expr
   52     | expr LE expr
   53     | expr GE expr
   54     | expr EQ expr
   55     | expr NE expr
   56     | expr AND expr
   57     | expr OR expr
   58     | NOT expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 48
'&' (38) 14 16 33 35
'(' (40) 6 7 27 28 29 30 31 32 39 49
')' (41) 6 7 27 28 29 30 31 32 39 49
'*' (42) 46
'+' (43) 44
',' (44) 15 16 21 35 36
'-' (45) 41 45
'/' (47) 47
';' (59) 8 19 25 26 27 28 29 30 31 32
'<' (60) 51
'=' (61) 25 26
'>' (62) 50
'[' (91) 26 28 38
']' (93) 26 28 38
'{' (123) 6 7
'}' (125) 6 7
error (256)
NUM (258) 40 41
ID (259) 6 13 14 15 16 20 21 25 26 27 28 33 35 37 38 39
UMINUS (260)
READ (261) 27 28
WRITE (262) 29
IF (263) 30 31
THEN (264) 30 31
ELSE (265) 31
ENDIF (266) 30 31
WHILE (267) 32
DO (268) 32
ENDWHILE (269) 32
DECL (270) 2
ENDDECL (271) 2
INTEGER (272) 4 7 11
BOOLEAN (273) 5 12
TRUE (274) 42
FALSE (275) 43
BGN (276) 22
END (277) 22
MAIN (278) 7
NE (279) 55
LE (280) 52
GE (281) 53
EQ (282) 54
OR (283) 57
AND (284) 56
NOT (285) 58


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
pgm (49)
    on left: 1, on right: 0
gl_dec (50)
    on left: 2, on right: 1
gdec_list (51)
    on left: 3, on right: 2
type (52)
    on left: 4 5, on right: 6 19
fn_def (53)
    on left: 6, on right: 1
main_fn (54)
    on left: 7, on right: 1
arg_list (55)
    on left: 8 9, on right: 6 8
arg (56)
    on left: 10, on right: 8
arg_type (57)
    on left: 11 12, on right: 10
id_list (58)
    on left: 13 14 15 16, on right: 10 15 16
ldec_list (59)
    on left: 17 18, on right: 6 7 17
ldec_stat (60)
    on left: 19, on right: 17
var_list (61)
    on left: 20 21, on right: 19 21
body (62)
    on left: 22, on right: 6 7
slist (63)
    on left: 23 24, on right: 22 23 30 31 32
stmt (64)
    on left: 25 26 27 28 29 30 31 32, on right: 23 24
act_par (65)
    on left: 33 34 35 36, on right: 35 36 39
expr (66)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58, on right: 25 26 28 29 30 31 32 34 36 38 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58


state 0

    0 $accept: . pgm $end

    DECL  shift, and go to state 1

    pgm     go to state 2
    gl_dec  go to state 3


state 1

    2 gl_dec: DECL . gdec_list ENDDECL

    $default  reduce using rule 3 (gdec_list)

    gdec_list  go to state 4


state 2

    0 $accept: pgm . $end

    $end  shift, and go to state 5


state 3

    1 pgm: gl_dec . fn_def main_fn

    INTEGER  shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    type    go to state 8
    fn_def  go to state 9


state 4

    2 gl_dec: DECL gdec_list . ENDDECL

    ENDDECL  shift, and go to state 10


state 5

    0 $accept: pgm $end .

    $default  accept


state 6

    4 type: INTEGER .

    $default  reduce using rule 4 (type)


state 7

    5 type: BOOLEAN .

    $default  reduce using rule 5 (type)


state 8

    6 fn_def: type . ID '(' arg_list ')' '{' ldec_list body '}'

    ID  shift, and go to state 11


state 9

    1 pgm: gl_dec fn_def . main_fn

    INTEGER  shift, and go to state 12

    main_fn  go to state 13


state 10

    2 gl_dec: DECL gdec_list ENDDECL .

    $default  reduce using rule 2 (gl_dec)


state 11

    6 fn_def: type ID . '(' arg_list ')' '{' ldec_list body '}'

    '('  shift, and go to state 14


state 12

    7 main_fn: INTEGER . MAIN '(' ')' '{' ldec_list body '}'

    MAIN  shift, and go to state 15


state 13

    1 pgm: gl_dec fn_def main_fn .

    $default  reduce using rule 1 (pgm)


state 14

    6 fn_def: type ID '(' . arg_list ')' '{' ldec_list body '}'

    INTEGER  shift, and go to state 16
    BOOLEAN  shift, and go to state 17

    $default  reduce using rule 9 (arg_list)

    arg_list  go to state 18
    arg       go to state 19
    arg_type  go to state 20


state 15

    7 main_fn: INTEGER MAIN . '(' ')' '{' ldec_list body '}'

    '('  shift, and go to state 21


state 16

   11 arg_type: INTEGER .

    $default  reduce using rule 11 (arg_type)


state 17

   12 arg_type: BOOLEAN .

    $default  reduce using rule 12 (arg_type)


state 18

    6 fn_def: type ID '(' arg_list . ')' '{' ldec_list body '}'

    ')'  shift, and go to state 22


state 19

    8 arg_list: arg . ';' arg_list

    ';'  shift, and go to state 23


state 20

   10 arg: arg_type . id_list

    ID   shift, and go to state 24
    '&'  shift, and go to state 25

    id_list  go to state 26


state 21

    7 main_fn: INTEGER MAIN '(' . ')' '{' ldec_list body '}'

    ')'  shift, and go to state 27


state 22

    6 fn_def: type ID '(' arg_list ')' . '{' ldec_list body '}'

    '{'  shift, and go to state 28


state 23

    8 arg_list: arg ';' . arg_list

    INTEGER  shift, and go to state 16
    BOOLEAN  shift, and go to state 17

    $default  reduce using rule 9 (arg_list)

    arg_list  go to state 29
    arg       go to state 19
    arg_type  go to state 20


state 24

   13 id_list: ID .
   15        | ID . ',' id_list

    ','  shift, and go to state 30

    $default  reduce using rule 13 (id_list)


state 25

   14 id_list: '&' . ID
   16        | '&' . ID ',' id_list

    ID  shift, and go to state 31


state 26

   10 arg: arg_type id_list .

    $default  reduce using rule 10 (arg)


state 27

    7 main_fn: INTEGER MAIN '(' ')' . '{' ldec_list body '}'

    '{'  shift, and go to state 32


state 28

    6 fn_def: type ID '(' arg_list ')' '{' . ldec_list body '}'

    INTEGER  shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    $default  reduce using rule 18 (ldec_list)

    type       go to state 33
    ldec_list  go to state 34
    ldec_stat  go to state 35


state 29

    8 arg_list: arg ';' arg_list .

    $default  reduce using rule 8 (arg_list)


state 30

   15 id_list: ID ',' . id_list

    ID   shift, and go to state 24
    '&'  shift, and go to state 25

    id_list  go to state 36


state 31

   14 id_list: '&' ID .
   16        | '&' ID . ',' id_list

    ','  shift, and go to state 37

    $default  reduce using rule 14 (id_list)


state 32

    7 main_fn: INTEGER MAIN '(' ')' '{' . ldec_list body '}'

    INTEGER  shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    $default  reduce using rule 18 (ldec_list)

    type       go to state 33
    ldec_list  go to state 38
    ldec_stat  go to state 35


state 33

   19 ldec_stat: type . var_list ';'

    ID  shift, and go to state 39

    var_list  go to state 40


state 34

    6 fn_def: type ID '(' arg_list ')' '{' ldec_list . body '}'

    BGN  shift, and go to state 41

    body  go to state 42


state 35

   17 ldec_list: ldec_stat . ldec_list

    INTEGER  shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    $default  reduce using rule 18 (ldec_list)

    type       go to state 33
    ldec_list  go to state 43
    ldec_stat  go to state 35


state 36

   15 id_list: ID ',' id_list .

    $default  reduce using rule 15 (id_list)


state 37

   16 id_list: '&' ID ',' . id_list

    ID   shift, and go to state 24
    '&'  shift, and go to state 25

    id_list  go to state 44


state 38

    7 main_fn: INTEGER MAIN '(' ')' '{' ldec_list . body '}'

    BGN  shift, and go to state 41

    body  go to state 45


state 39

   20 var_list: ID .

    $default  reduce using rule 20 (var_list)


state 40

   19 ldec_stat: type var_list . ';'
   21 var_list: var_list . ',' ID

    ';'  shift, and go to state 46
    ','  shift, and go to state 47


state 41

   22 body: BGN . slist END

    ID     shift, and go to state 48
    READ   shift, and go to state 49
    WRITE  shift, and go to state 50
    IF     shift, and go to state 51
    WHILE  shift, and go to state 52

    slist  go to state 53
    stmt   go to state 54


state 42

    6 fn_def: type ID '(' arg_list ')' '{' ldec_list body . '}'

    '}'  shift, and go to state 55


state 43

   17 ldec_list: ldec_stat ldec_list .

    $default  reduce using rule 17 (ldec_list)


state 44

   16 id_list: '&' ID ',' id_list .

    $default  reduce using rule 16 (id_list)


state 45

    7 main_fn: INTEGER MAIN '(' ')' '{' ldec_list body . '}'

    '}'  shift, and go to state 56


state 46

   19 ldec_stat: type var_list ';' .

    $default  reduce using rule 19 (ldec_stat)


state 47

   21 var_list: var_list ',' . ID

    ID  shift, and go to state 57


state 48

   25 stmt: ID . '=' expr ';'
   26     | ID . '[' expr ']' '=' expr ';'

    '['  shift, and go to state 58
    '='  shift, and go to state 59


state 49

   27 stmt: READ . '(' ID ')' ';'
   28     | READ . '(' ID '[' expr ']' ')' ';'

    '('  shift, and go to state 60


state 50

   29 stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 61


state 51

   30 stmt: IF . '(' expr ')' THEN slist ENDIF ';'
   31     | IF . '(' expr ')' THEN slist ELSE slist ENDIF ';'

    '('  shift, and go to state 62


state 52

   32 stmt: WHILE . '(' expr ')' DO slist ENDWHILE ';'

    '('  shift, and go to state 63


state 53

   22 body: BGN slist . END
   23 slist: slist . stmt

    ID     shift, and go to state 48
    READ   shift, and go to state 49
    WRITE  shift, and go to state 50
    IF     shift, and go to state 51
    WHILE  shift, and go to state 52
    END    shift, and go to state 64

    stmt  go to state 65


state 54

   24 slist: stmt .

    $default  reduce using rule 24 (slist)


state 55

    6 fn_def: type ID '(' arg_list ')' '{' ldec_list body '}' .

    $default  reduce using rule 6 (fn_def)


state 56

    7 main_fn: INTEGER MAIN '(' ')' '{' ldec_list body '}' .

    $default  reduce using rule 7 (main_fn)


state 57

   21 var_list: var_list ',' ID .

    $default  reduce using rule 21 (var_list)


state 58

   26 stmt: ID '[' . expr ']' '=' expr ';'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 73


state 59

   25 stmt: ID '=' . expr ';'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 74


state 60

   27 stmt: READ '(' . ID ')' ';'
   28     | READ '(' . ID '[' expr ']' ')' ';'

    ID  shift, and go to state 75


state 61

   29 stmt: WRITE '(' . expr ')' ';'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 76


state 62

   30 stmt: IF '(' . expr ')' THEN slist ENDIF ';'
   31     | IF '(' . expr ')' THEN slist ELSE slist ENDIF ';'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 77


state 63

   32 stmt: WHILE '(' . expr ')' DO slist ENDWHILE ';'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 78


state 64

   22 body: BGN slist END .

    $default  reduce using rule 22 (body)


state 65

   23 slist: slist stmt .

    $default  reduce using rule 23 (slist)


state 66

   40 expr: NUM .

    $default  reduce using rule 40 (expr)


state 67

   37 expr: ID .
   38     | ID . '[' expr ']'
   39     | ID . '(' act_par ')'

    '['  shift, and go to state 79
    '('  shift, and go to state 80

    $default  reduce using rule 37 (expr)


state 68

   42 expr: TRUE .

    $default  reduce using rule 42 (expr)


state 69

   43 expr: FALSE .

    $default  reduce using rule 43 (expr)


state 70

   41 expr: '-' . NUM

    NUM  shift, and go to state 81


state 71

   58 expr: NOT . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 82


state 72

   49 expr: '(' . expr ')'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 83


state 73

   26 stmt: ID '[' expr . ']' '=' expr ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ']'  shift, and go to state 97


state 74

   25 stmt: ID '=' expr . ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ';'  shift, and go to state 98


state 75

   27 stmt: READ '(' ID . ')' ';'
   28     | READ '(' ID . '[' expr ']' ')' ';'

    '['  shift, and go to state 99
    ')'  shift, and go to state 100


state 76

   29 stmt: WRITE '(' expr . ')' ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 101


state 77

   30 stmt: IF '(' expr . ')' THEN slist ENDIF ';'
   31     | IF '(' expr . ')' THEN slist ELSE slist ENDIF ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 102


state 78

   32 stmt: WHILE '(' expr . ')' DO slist ENDWHILE ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 103


state 79

   38 expr: ID '[' . expr ']'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 104


state 80

   39 expr: ID '(' . act_par ')'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72
    '&'    shift, and go to state 105

    act_par  go to state 106
    expr     go to state 107


state 81

   41 expr: '-' NUM .

    $default  reduce using rule 41 (expr)


state 82

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | NOT expr .

    $default  reduce using rule 58 (expr)


state 83

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | '(' expr . ')'
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 108


state 84

   50 expr: expr '>' . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 109


state 85

   51 expr: expr '<' . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 110


state 86

   55 expr: expr NE . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 111


state 87

   52 expr: expr LE . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 112


state 88

   53 expr: expr GE . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 113


state 89

   54 expr: expr EQ . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 114


state 90

   57 expr: expr OR . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 115


state 91

   56 expr: expr AND . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 116


state 92

   44 expr: expr '+' . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 117


state 93

   45 expr: expr '-' . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 118


state 94

   46 expr: expr '*' . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 119


state 95

   47 expr: expr '/' . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 120


state 96

   48 expr: expr '%' . expr

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 121


state 97

   26 stmt: ID '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 122


state 98

   25 stmt: ID '=' expr ';' .

    $default  reduce using rule 25 (stmt)


state 99

   28 stmt: READ '(' ID '[' . expr ']' ')' ';'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 123


state 100

   27 stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 124


state 101

   29 stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 125


state 102

   30 stmt: IF '(' expr ')' . THEN slist ENDIF ';'
   31     | IF '(' expr ')' . THEN slist ELSE slist ENDIF ';'

    THEN  shift, and go to state 126


state 103

   32 stmt: WHILE '(' expr ')' . DO slist ENDWHILE ';'

    DO  shift, and go to state 127


state 104

   38 expr: ID '[' expr . ']'
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ']'  shift, and go to state 128


state 105

   33 act_par: '&' . ID
   35        | '&' . ID ',' act_par

    ID  shift, and go to state 129


state 106

   39 expr: ID '(' act_par . ')'

    ')'  shift, and go to state 130


state 107

   34 act_par: expr .
   36        | expr . ',' act_par
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ','  shift, and go to state 131

    $default  reduce using rule 34 (act_par)


state 108

   49 expr: '(' expr ')' .

    $default  reduce using rule 49 (expr)


state 109

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   50     | expr '>' expr .
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 50 (expr)


state 110

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   51     | expr '<' expr .
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 51 (expr)


state 111

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   55     | expr NE expr .
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 55 (expr)


state 112

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   52     | expr LE expr .
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 52 (expr)


state 113

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   53     | expr GE expr .
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 53 (expr)


state 114

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   54     | expr EQ expr .
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    NE   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 54 (expr)


state 115

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr
   57     | expr OR expr .

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 57 (expr)


state 116

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   56     | expr AND expr .
   57     | expr . OR expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 56 (expr)


state 117

   44 expr: expr . '+' expr
   44     | expr '+' expr .
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 44 (expr)


state 118

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   45     | expr '-' expr .
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 45 (expr)


state 119

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   46     | expr '*' expr .
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    $default  reduce using rule 46 (expr)


state 120

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   47     | expr '/' expr .
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    $default  reduce using rule 47 (expr)


state 121

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   48     | expr '%' expr .
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    $default  reduce using rule 48 (expr)


state 122

   26 stmt: ID '[' expr ']' '=' . expr ';'

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72

    expr  go to state 132


state 123

   28 stmt: READ '(' ID '[' expr . ']' ')' ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ']'  shift, and go to state 133


state 124

   27 stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 27 (stmt)


state 125

   29 stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 29 (stmt)


state 126

   30 stmt: IF '(' expr ')' THEN . slist ENDIF ';'
   31     | IF '(' expr ')' THEN . slist ELSE slist ENDIF ';'

    ID     shift, and go to state 48
    READ   shift, and go to state 49
    WRITE  shift, and go to state 50
    IF     shift, and go to state 51
    WHILE  shift, and go to state 52

    slist  go to state 134
    stmt   go to state 54


state 127

   32 stmt: WHILE '(' expr ')' DO . slist ENDWHILE ';'

    ID     shift, and go to state 48
    READ   shift, and go to state 49
    WRITE  shift, and go to state 50
    IF     shift, and go to state 51
    WHILE  shift, and go to state 52

    slist  go to state 135
    stmt   go to state 54


state 128

   38 expr: ID '[' expr ']' .

    $default  reduce using rule 38 (expr)


state 129

   33 act_par: '&' ID .
   35        | '&' ID . ',' act_par

    ','  shift, and go to state 136

    $default  reduce using rule 33 (act_par)


state 130

   39 expr: ID '(' act_par ')' .

    $default  reduce using rule 39 (expr)


state 131

   36 act_par: expr ',' . act_par

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72
    '&'    shift, and go to state 105

    act_par  go to state 137
    expr     go to state 107


state 132

   26 stmt: ID '[' expr ']' '=' expr . ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . GE expr
   54     | expr . EQ expr
   55     | expr . NE expr
   56     | expr . AND expr
   57     | expr . OR expr

    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    NE   shift, and go to state 86
    LE   shift, and go to state 87
    GE   shift, and go to state 88
    EQ   shift, and go to state 89
    OR   shift, and go to state 90
    AND  shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ';'  shift, and go to state 138


state 133

   28 stmt: READ '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 139


state 134

   23 slist: slist . stmt
   30 stmt: IF '(' expr ')' THEN slist . ENDIF ';'
   31     | IF '(' expr ')' THEN slist . ELSE slist ENDIF ';'

    ID     shift, and go to state 48
    READ   shift, and go to state 49
    WRITE  shift, and go to state 50
    IF     shift, and go to state 51
    ELSE   shift, and go to state 140
    ENDIF  shift, and go to state 141
    WHILE  shift, and go to state 52

    stmt  go to state 65


state 135

   23 slist: slist . stmt
   32 stmt: WHILE '(' expr ')' DO slist . ENDWHILE ';'

    ID        shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    IF        shift, and go to state 51
    WHILE     shift, and go to state 52
    ENDWHILE  shift, and go to state 142

    stmt  go to state 65


state 136

   35 act_par: '&' ID ',' . act_par

    NUM    shift, and go to state 66
    ID     shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    '-'    shift, and go to state 70
    NOT    shift, and go to state 71
    '('    shift, and go to state 72
    '&'    shift, and go to state 105

    act_par  go to state 143
    expr     go to state 107


state 137

   36 act_par: expr ',' act_par .

    $default  reduce using rule 36 (act_par)


state 138

   26 stmt: ID '[' expr ']' '=' expr ';' .

    $default  reduce using rule 26 (stmt)


state 139

   28 stmt: READ '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 144


state 140

   31 stmt: IF '(' expr ')' THEN slist ELSE . slist ENDIF ';'

    ID     shift, and go to state 48
    READ   shift, and go to state 49
    WRITE  shift, and go to state 50
    IF     shift, and go to state 51
    WHILE  shift, and go to state 52

    slist  go to state 145
    stmt   go to state 54


state 141

   30 stmt: IF '(' expr ')' THEN slist ENDIF . ';'

    ';'  shift, and go to state 146


state 142

   32 stmt: WHILE '(' expr ')' DO slist ENDWHILE . ';'

    ';'  shift, and go to state 147


state 143

   35 act_par: '&' ID ',' act_par .

    $default  reduce using rule 35 (act_par)


state 144

   28 stmt: READ '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 28 (stmt)


state 145

   23 slist: slist . stmt
   31 stmt: IF '(' expr ')' THEN slist ELSE slist . ENDIF ';'

    ID     shift, and go to state 48
    READ   shift, and go to state 49
    WRITE  shift, and go to state 50
    IF     shift, and go to state 51
    ENDIF  shift, and go to state 148
    WHILE  shift, and go to state 52

    stmt  go to state 65


state 146

   30 stmt: IF '(' expr ')' THEN slist ENDIF ';' .

    $default  reduce using rule 30 (stmt)


state 147

   32 stmt: WHILE '(' expr ')' DO slist ENDWHILE ';' .

    $default  reduce using rule 32 (stmt)


state 148

   31 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF . ';'

    ';'  shift, and go to state 149


state 149

   31 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF ';' .

    $default  reduce using rule 31 (stmt)
